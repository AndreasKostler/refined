### Changes

* TODO: inference rules!
* Added an implicit version of `refineLit` to the `implicits` object.
  This allows to write
  ```scala
  val a: Char @@ Digit = '4'
  ```
  instead of
  ```scala
  val a: Char @@ Digit = refineLit('4')
  ```
* Made `Predicate` serializable.
* Removed `IsNull` and `NonNull` predicates since they often caused ambiguous
  implicit errors and Scala has better means to handle `null` values.
* Updated to shapeless 2.2.2. ([#8], [#13])

### Bug fixes

* `refineLit` always required a prior import of `shapeless.tag.@@`. ([9f6d7d9])
* Changed build to multi-project build so that tut-core is not added as
  dependency to refined. ([#17])

### New predicates

[`numeric`](https://github.com/fthomas/refined/blob/v0.1.0/src/main/scala/eu/timepit/refined/numeric.scala)

* `NonPositive`: checks if a numeric value is zero or negative
* `NonNegative`: checks if a numeric value is zero or positive

[`string`](https://github.com/fthomas/refined/blob/v0.1.0/src/main/scala/eu/timepit/refined/string.scala)

* `EndsWith[S]`: checks if a `String` ends with the suffix `S`
* `Regex`: checks if a `String` is a valid regular expression
* `StartsWith[S]`: checks if a `String` starts with the prefix `S`

[#8]: https://github.com/fthomas/refined/issues/8
[#13]: https://github.com/fthomas/refined/issues/13
[#17]: https://github.com/fthomas/refined/issues/17
[9f6d7d9]: https://github.com/fthomas/refined/commit/9f6d7d9ba22d20eee0a2fe2f721cde30fb4f94f9
